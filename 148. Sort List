/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode SortList(ListNode head) {
        if(head ==null || head.next ==null){
            return head;
        }

        ListNode preSlow = null, slow = head, fast = head;
        while(fast !=null&& fast.next !=null){
            preSlow= slow;
            slow = slow.next;
            fast = fast.next.next;
        }
        preSlow.next = null;

        ListNode left = SortList(head);
        ListNode right = SortList(slow);

        return merge(left, right);
    }
    private ListNode merge(ListNode head, ListNode slow){
        ListNode l = new ListNode(0);
        ListNode cur = l;
        while(head!=null &&slow!=null){
            if(head.val<slow.val){
                cur.next=head;
                head=head.next;
            }
            else{
                cur.next=slow;
                slow=slow.next;
            }
            cur=cur.next;
        }
        if(head !=null){
            cur.next=head;
        }
        if(slow !=null){
            cur.next=slow;
        }
        return l.next;
    }
}
