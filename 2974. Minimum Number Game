public class Solution {
    public void swap(ref int a, ref int b){
        int temp = a;
        a = b;
        b = temp;
    }
    public void heapify(ref int[] nums, int n){
        
        for(int i = n; i>0; i--)
        {
            int fatherIndex = (i-1)/2;
            if(nums[i]>nums[fatherIndex])
            {
                swap(ref nums[i],ref nums[fatherIndex]);
            }
        }
    }
    public void heapSort(ref int[] nums){
        int n =0;
        for( int i =nums.Length-1; i>0 ; i--){
            n= i;
            heapify(ref nums,n);
            swap(ref nums[i], ref nums[0]);
        }
    }
    public int[] NumberGame(int[] nums) {

        heapSort(ref nums);
        for(int i = 0 ; i<nums.Length-1;i+=2){
            swap(ref nums[i], ref nums[i+1]);
        }
        return nums;
    }
}
